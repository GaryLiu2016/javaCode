public LinkedList<Integer> homocentricArray(int[][] input) {
        if (input == null || input.length == 0) {
            return null;
        }
        int m = input[0].length;
        int n = input.length;
        int left = 0;
        int right = m - 1;
        int up = 0;
        int down = n - 1;
        LinkedList<Integer> result = new LinkedList<>();

        while (left <= right && up <= down) {
            for (int j = left; j <= right && up <= down; j++) {
                result.add(input[up][j]);
            }
            up++;
            for (int j = up; j <= down && left <= right; j++) {
                result.add(input[j][right]);
            }
            right--;
            for (int j = right; j >= left && up <= down; j--) {
                result.add(input[down][j]);
            }
            down--;
            for (int j = down; j >= up && left <= right; j--) {
                result.add(input[j][left]);
            }
            left++;
        }

        return result;

    }